#-----複合化用パスフレーズ-----
jasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD:}

#-----DB設定-----
spring.jpa.open-in-view=false
spring.jpa.database=POSTGRESQL
spring.devtools.remote.restart.enabled=true
spring.devtools.livereload.enabled=true

#複数DBへの接続定義(Kai9Comは、同じDBを使うので、両方同じ設定)  
# primary database
spring.datasource.primary.url=jdbc:postgresql://192.168.0.0:5432/kai9com?ApplicationName=kai9com-com
#IDとPWは暗号化しているのでOSの環境変数にパスフレーズを登録しないと動かない
spring.datasource.primary.username=kai9comadmin
spring.datasource.primary.password=ENC(DpHnDtFWolLcYKcdut/JT5edNEnzXgDnqenaens+lZHxTUdyhDwxFPu19lsgD9EZ5tEjbk)
spring.datasource.primary.driverClassName=org.postgresql.Driver
spring.datasource.primary.maximumPoolSize=10
spring.datasource.primary.minimumidle= 1
spring.datasource.primary.schema= kai9com

# common database
spring.datasource.common.url=jdbc:postgresql://192.168.0.0:5432/kai9com?ApplicationName=kai9com-com
#IDとPWは暗号化しているのでOSの環境変数にパスフレーズを登録しないと動かない
spring.datasource.common.username=kai9comadmin
spring.datasource.common.password=ENC(DpHnDtFWolLcYKcdut/JT5edNEnzXgDnq+lZHxTUdyhDwxFPu19lsgD9EZ5tEjbk)
spring.datasource.common.driverClassName=org.postgresql.Driver
spring.datasource.common.maximumPoolSize=10
spring.datasource.common.minimumidle= 1

#-----SSL-----
#ポート番号
server.port=9445
#プロトコル
server.ssl.protocol=TLSv1.3
#キーストア・タイプ
server.ssl.key-store-type=PKCS12
#鍵の格納先(自己証明書)
server.ssl.key-store=classpath:keystore/self_keystore.p12
#鍵のパスワード
server.ssl.key-store-password=kai9kai9Example
#keystore内部におけるkeypairの名称
server.ssl.key-alias=kai9keypair
#-----SSL-----

#-----JWT-----
jwt.domain=kai9.com
jwt.secretKey: ENC(Ry4itrPPnA2Kav3ApoQUfmwZZAnGXloskK9LuZhLLYNuu0K6sKdsaionsnakla5dZofXOMxArFQIUF/wfhP1H0EAyhBjj4KooA==)

#-----ログファイル-----
#ログを出力するレベル(デフォルトINFO)
logging.level.root=INFO
#logging.level.root=TRACE 
#ログを出力するレベル(springframework.web用)
logging.level.org.springframework.web=INFO
#ログを出力するレベル(hibernate用:SQL系？)
logging.level.org.hibernate=ERROR
#logging.file.name=D:\logs\kai9.log
logging.file.path=D:\logs\kai9com
